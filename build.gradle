import java.time.Instant
plugins {
    id 'java'
    id 'maven-publish'
    id 'com.github.johnrengelman.shadow'
//    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    //id "org.sonarqube" version "4.3.0.3225"
}

version = "${mc_version}-${mod_version}"
group = "${mod_group_id}"

println "Starting build of ${name}, Version: ${mod_version}"
println "Using Forge: ${forge_version}, for Minecraft: ${mc_version}, with Mappings: ${mapping_channel}"

//base {
//    archivesName = "${mod_archive_base}"
//}

//sonar {
//    properties {
//        property "sonar.projectKey", "GrowthcraftCE_Growthcraft-1.20"
//        property "sonar.organization", "growthcraftce"
//        property "sonar.host.url", "https://sonarcloud.io"
//    }
//}

// Common submodule configurations
subprojects { p ->

    // Needs to be force-applied here to allow below configuration
    apply plugin: 'java'


    // Select Java version
    java.toolchain.languageVersion = JavaLanguageVersion.of(java_lang_version)

    // Copy properties from root
    group = rootProject.group
    mod_version = rootProject.mod_version
    version = rootProject.version

    // ForgeGradle version settings
    archivesBaseName = rootProject.name

    // Jar settings
    jar {
        archiveClassifier = p.name
    }

    // Add datagen resources to source set
    sourceSets.main.resources.srcDirs += "src/main/generated"

    // Add default repositories
    repositories {
	    // Curse Forge
	    maven { url "https://www.cursemaven.com" }
	    // JEI, Tinker's Construct, Mantle, Iron Chests, Natura, etc.
	    maven { url = "https://maven.blamejared.com/" }
    }

    // Replace version tokens in mods.toml
    processResources {
        inputs.property 'mod_version', mod_version
        inputs.property 'mc_version', mc_version

        filesMatching('META-INF/mods.toml') {
            expand 'file': ['jarVersion': mod_version],
                    'mc_version': mc_version,
                    'forge_version': forge_version,
                    'lang_version': forge_version.split('\\.')[0],
                    'mod_license': mod_license,
            		'mod_version': mod_version,
            		'mod_authors': mod_authors,
            		'mod_description': mod_description
        }
	}
}